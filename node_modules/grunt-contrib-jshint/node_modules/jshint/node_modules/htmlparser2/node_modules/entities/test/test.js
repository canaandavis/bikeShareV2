var assert=require("assert"),path=require("path"),entities=require("../");describe("Encode->decode test",function(){var e=[{input:"asdf & ÿ ü '",xml:"asdf &amp; &#xFF; &#xFC; &apos;",html:"asdf &amp; &yuml; &uuml; &apos;"},{input:"&#38;",xml:"&amp;#38;",html:"&amp;&num;38&semi;"}];e.forEach(function(e){var t=entities.encodeXML(e.input);it("should XML encode "+e.input,function(){assert.equal(t,e.xml)}),it("should default to XML encode "+e.input,function(){assert.equal(entities.encode(e.input),e.xml)}),it("should XML decode "+t,function(){assert.equal(entities.decodeXML(t),e.input)}),it("should default to XML encode "+t,function(){assert.equal(entities.decode(t),e.input)}),it("should default strict to XML encode "+t,function(){assert.equal(entities.decodeStrict(t),e.input)});var n=entities.encodeHTML5(e.input);it("should HTML5 encode "+e.input,function(){assert.equal(n,e.html)}),it("should HTML5 decode "+n,function(){assert.equal(entities.decodeHTML(n),e.input)})})}),describe("Decode test",function(){var e=[{input:"&amp;amp;",output:"&amp;"},{input:"&amp;#38;",output:"&#38;"},{input:"&amp;#x26;",output:"&#x26;"},{input:"&amp;#X26;",output:"&#X26;"},{input:"&#38;#38;",output:"&#38;"},{input:"&#x26;#38;",output:"&#38;"},{input:"&#X26;#38;",output:"&#38;"},{input:"&#x3a;",output:":"},{input:"&#x3A;",output:":"},{input:"&#X3a;",output:":"},{input:"&#X3A;",output:":"}];e.forEach(function(e){it("should XML decode "+e.input,function(){assert.equal(entities.decodeXML(e.input),e.output)}),it("should HTML4 decode "+e.input,function(){assert.equal(entities.decodeHTML(e.input),e.output)}),it("should HTML5 decode "+e.input,function(){assert.equal(entities.decodeHTML(e.input),e.output)})})});var levels=["xml","entities"];describe("Documents",function(){function t(){Object.keys(e).forEach(function(t){assert.equal(entities.decodeHTML("&"+t),e[t])})}levels.map(function(e){return path.join("..","maps",e)}).map(require).forEach(function(e,t){describe("Decode",function(){it(levels[t],function(){Object.keys(e).forEach(function(n){for(var r=t;r<levels.length;r++)assert.equal(entities.decode("&"+n+";",r),e[n])})})}),describe("Decode strict",function(){it(levels[t],function(){Object.keys(e).forEach(function(n){for(var r=t;r<levels.length;r++)assert.equal(entities.decodeStrict("&"+n+";",r),e[n])})})}),describe("Encode",function(){it(levels[t],function(){Object.keys(e).forEach(function(n){for(var r=t;r<levels.length;r++)assert.equal(entities.decode(entities.encode(e[n],r),r),e[n])})})})});var e=require("../maps/legacy.json");describe("Legacy",function(){it("should decode",t)})});var astral={"1D306":"𝌆","1D11E":"𝄞"},astralSpecial={80:"€",11e4:"�"};describe("Astral entities",function(){Object.keys(astral).forEach(function(e){it("should decode "+astral[e],function(){assert.equal(entities.decode("&#x"+e+";"),astral[e])}),it("should encode "+astral[e],function(){assert.equal(entities.encode(astral[e]),"&#x"+e+";")})}),Object.keys(astralSpecial).forEach(function(e){it("special should decode \\u"+e,function(){assert.equal(entities.decode("&#x"+e+";"),astralSpecial[e])})})});