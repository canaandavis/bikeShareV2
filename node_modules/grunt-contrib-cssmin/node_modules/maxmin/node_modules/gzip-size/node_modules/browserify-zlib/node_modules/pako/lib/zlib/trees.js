function zero(e){var t=e.length;while(--t>=0)e[t]=0}function d_code(e){return e<256?_dist_code[e]:_dist_code[256+(e>>>7)]}function put_short(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function send_bits(e,t,n){e.bi_valid>Buf_size-n?(e.bi_buf|=t<<e.bi_valid&65535,put_short(e,e.bi_buf),e.bi_buf=t>>Buf_size-e.bi_valid,e.bi_valid+=n-Buf_size):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function send_code(e,t,n){send_bits(e,n[t*2],n[t*2+1])}function bi_reverse(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function bi_flush(e){e.bi_valid===16?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function gen_bitlen(e,t){var n=t.dyn_tree,r=t.max_code,i=t.stat_desc.static_tree,s=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,u=t.stat_desc.extra_base,a=t.stat_desc.max_length,f,l,c,h,p,d,v=0;for(h=0;h<=MAX_BITS;h++)e.bl_count[h]=0;n[e.heap[e.heap_max]*2+1]=0;for(f=e.heap_max+1;f<HEAP_SIZE;f++){l=e.heap[f],h=n[n[l*2+1]*2+1]+1,h>a&&(h=a,v++),n[l*2+1]=h;if(l>r)continue;e.bl_count[h]++,p=0,l>=u&&(p=o[l-u]),d=n[l*2],e.opt_len+=d*(h+p),s&&(e.static_len+=d*(i[l*2+1]+p))}if(v===0)return;do{h=a-1;while(e.bl_count[h]===0)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[a]--,v-=2}while(v>0);for(h=a;h!==0;h--){l=e.bl_count[h];while(l!==0){c=e.heap[--f];if(c>r)continue;n[c*2+1]!==h&&(e.opt_len+=(h-n[c*2+1])*n[c*2],n[c*2+1]=h),l--}}}function gen_codes(e,t,n){var r=new Array(MAX_BITS+1),i=0,s,o;for(s=1;s<=MAX_BITS;s++)r[s]=i=i+n[s-1]<<1;for(o=0;o<=t;o++){var u=e[o*2+1];if(u===0)continue;e[o*2]=bi_reverse(r[u]++,u)}}function tr_static_init(){var e,t,n,r,i,s=new Array(MAX_BITS+1);n=0;for(r=0;r<LENGTH_CODES-1;r++){base_length[r]=n;for(e=0;e<1<<extra_lbits[r];e++)_length_code[n++]=r}_length_code[n-1]=r,i=0;for(r=0;r<16;r++){base_dist[r]=i;for(e=0;e<1<<extra_dbits[r];e++)_dist_code[i++]=r}i>>=7;for(;r<D_CODES;r++){base_dist[r]=i<<7;for(e=0;e<1<<extra_dbits[r]-7;e++)_dist_code[256+i++]=r}for(t=0;t<=MAX_BITS;t++)s[t]=0;e=0;while(e<=143)static_ltree[e*2+1]=8,e++,s[8]++;while(e<=255)static_ltree[e*2+1]=9,e++,s[9]++;while(e<=279)static_ltree[e*2+1]=7,e++,s[7]++;while(e<=287)static_ltree[e*2+1]=8,e++,s[8]++;gen_codes(static_ltree,L_CODES+1,s);for(e=0;e<D_CODES;e++)static_dtree[e*2+1]=5,static_dtree[e*2]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS)}function init_block(e){var t;for(t=0;t<L_CODES;t++)e.dyn_ltree[t*2]=0;for(t=0;t<D_CODES;t++)e.dyn_dtree[t*2]=0;for(t=0;t<BL_CODES;t++)e.bl_tree[t*2]=0;e.dyn_ltree[END_BLOCK*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function bi_windup(e){e.bi_valid>8?put_short(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function copy_block(e,t,n,r){bi_windup(e),r&&(put_short(e,n),put_short(e,~n)),utils.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function smaller(e,t,n,r){var i=t*2,s=n*2;return e[i]<e[s]||e[i]===e[s]&&r[t]<=r[n]}function pqdownheap(e,t,n){var r=e.heap[n],i=n<<1;while(i<=e.heap_len){i<e.heap_len&&smaller(t,e.heap[i+1],e.heap[i],e.depth)&&i++;if(smaller(t,r,e.heap[i],e.depth))break;e.heap[n]=e.heap[i],n=i,i<<=1}e.heap[n]=r}function compress_block(e,t,n){var r,i,s=0,o,u;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+s*2]<<8|e.pending_buf[e.d_buf+s*2+1],i=e.pending_buf[e.l_buf+s],s++,r===0?send_code(e,i,t):(o=_length_code[i],send_code(e,o+LITERALS+1,t),u=extra_lbits[o],u!==0&&(i-=base_length[o],send_bits(e,i,u)),r--,o=d_code(r),send_code(e,o,n),u=extra_dbits[o],u!==0&&(r-=base_dist[o],send_bits(e,r,u)));while(s<e.last_lit);send_code(e,END_BLOCK,t)}function build_tree(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,i=t.stat_desc.has_stree,s=t.stat_desc.elems,o,u,a=-1,f;e.heap_len=0,e.heap_max=HEAP_SIZE;for(o=0;o<s;o++)n[o*2]!==0?(e.heap[++e.heap_len]=a=o,e.depth[o]=0):n[o*2+1]=0;while(e.heap_len<2)f=e.heap[++e.heap_len]=a<2?++a:0,n[f*2]=1,e.depth[f]=0,e.opt_len--,i&&(e.static_len-=r[f*2+1]);t.max_code=a;for(o=e.heap_len>>1;o>=1;o--)pqdownheap(e,n,o);f=s;do o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,n,1),u=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=u,n[f*2]=n[o*2]+n[u*2],e.depth[f]=(e.depth[o]>=e.depth[u]?e.depth[o]:e.depth[u])+1,n[o*2+1]=n[u*2+1]=f,e.heap[1]=f++,pqdownheap(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,t),gen_codes(n,a,e.bl_count)}function scan_tree(e,t,n){var r,i=-1,s,o=t[1],u=0,a=7,f=4;o===0&&(a=138,f=3),t[(n+1)*2+1]=65535;for(r=0;r<=n;r++){s=o,o=t[(r+1)*2+1];if(++u<a&&s===o)continue;u<f?e.bl_tree[s*2]+=u:s!==0?(s!==i&&e.bl_tree[s*2]++,e.bl_tree[REP_3_6*2]++):u<=10?e.bl_tree[REPZ_3_10*2]++:e.bl_tree[REPZ_11_138*2]++,u=0,i=s,o===0?(a=138,f=3):s===o?(a=6,f=3):(a=7,f=4)}}function send_tree(e,t,n){var r,i=-1,s,o=t[1],u=0,a=7,f=4;o===0&&(a=138,f=3);for(r=0;r<=n;r++){s=o,o=t[(r+1)*2+1];if(++u<a&&s===o)continue;if(u<f){do send_code(e,s,e.bl_tree);while(--u!==0)}else s!==0?(s!==i&&(send_code(e,s,e.bl_tree),u--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,u-3,2)):u<=10?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,u-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,u-11,7));u=0,i=s,o===0?(a=138,f=3):s===o?(a=6,f=3):(a=7,f=4)}}function build_bl_tree(e){var t;scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc);for(t=BL_CODES-1;t>=3;t--)if(e.bl_tree[bl_order[t]*2+1]!==0)break;return e.opt_len+=3*(t+1)+5+5+4,t}function send_all_trees(e,t,n,r){var i;send_bits(e,t-257,5),send_bits(e,n-1,5),send_bits(e,r-4,4);for(i=0;i<r;i++)send_bits(e,e.bl_tree[bl_order[i]*2+1],3);send_tree(e,e.dyn_ltree,t-1),send_tree(e,e.dyn_dtree,n-1)}function detect_data_type(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Z_BINARY;if(e.dyn_ltree[18]!==0||e.dyn_ltree[20]!==0||e.dyn_ltree[26]!==0)return Z_TEXT;for(n=32;n<LITERALS;n++)if(e.dyn_ltree[n*2]!==0)return Z_TEXT;return Z_BINARY}function _tr_init(e){static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)}function _tr_stored_block(e,t,n,r){send_bits(e,(STORED_BLOCK<<1)+(r?1:0),3),copy_block(e,t,n,!0)}function _tr_align(e){send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)}function _tr_flush_block(e,t,n,r){var i,s,o=0;e.level>0?(e.strm.data_type===Z_UNKNOWN&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),o=build_bl_tree(e),i=e.opt_len+3+7>>>3,s=e.static_len+3+7>>>3,s<=i&&(i=s)):i=s=n+5,n+4<=i&&t!==-1?_tr_stored_block(e,t,n,r):e.strategy===Z_FIXED||s===i?(send_bits(e,(STATIC_TREES<<1)+(r?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(r?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),r&&bi_windup(e)}function _tr_tally(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(_length_code[n]+LITERALS+1)*2]++,e.dyn_dtree[d_code(t)*2]++),e.last_lit===e.lit_bufsize-1}var utils=require("../utils/common"),Z_FIXED=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN=2,STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH=3,MAX_MATCH=258,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],DIST_CODE_LEN=512,static_ltree=new Array((L_CODES+2)*2);zero(static_ltree);var static_dtree=new Array(D_CODES*2);zero(static_dtree);var _dist_code=new Array(DIST_CODE_LEN);zero(_dist_code);var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);zero(_length_code);var base_length=new Array(LENGTH_CODES);zero(base_length);var base_dist=new Array(D_CODES);zero(base_dist);var StaticTreeDesc=function(e,t,n,r,i){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=e&&e.length},static_l_desc,static_d_desc,static_bl_desc,TreeDesc=function(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t},static_init_done=!1;exports._tr_init=_tr_init,exports._tr_stored_block=_tr_stored_block,exports._tr_flush_block=_tr_flush_block,exports._tr_tally=_tr_tally,exports._tr_align=_tr_align;