// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function RandomReadStream(e){Stream.call(this),this.readable=!0,this._paused=!1,this._processing=!1,this._hasher=crypto.createHash("sha1"),e=e||{},e.block=e.block||262144,e.total=e.total||268435456,this._remaining=e.total,e.jitter=e.jitter||1024,this._opt=e,this._process=this._process.bind(this),process.nextTick(this._process)}function HashStream(){Stream.call(this),this.readable=this.writable=!0,this._hasher=crypto.createHash("sha1")}var crypto=require("crypto"),stream=require("stream"),Stream=stream.Stream,util=require("util"),tape=require("tape"),zlib=require("../");util.inherits(RandomReadStream,Stream),RandomReadStream.prototype.pause=function(){this._paused=!0,this.emit("pause")},RandomReadStream.prototype.resume=function(){this._paused=!1,this.emit("resume"),this._process()},RandomReadStream.prototype._process=function(){if(this._processing)return;if(this._paused)return;this._processing=!0;if(!this._remaining){this._hash=this._hasher.digest("hex").toLowerCase().trim(),this._processing=!1,this.emit("end");return}var e=this._opt.block,t=this._opt.jitter;t&&(e+=Math.ceil(Math.random()*t-t/2)),e=Math.min(e,this._remaining);var n=new Buffer(e);for(var r=0;r<e;r++)n[r]=Math.random()*256;this._hasher.update(n),this._remaining-=e,this._processing=!1,this.emit("data",n),process.nextTick(this._process)},util.inherits(HashStream,Stream),HashStream.prototype.write=function(e){return this._hasher.update(e),process.nextTick(this.resume.bind(this)),!1},HashStream.prototype.resume=function(){this.emit("resume"),process.nextTick(this.emit.bind(this,"drain"))},HashStream.prototype.end=function(e){e&&this.write(e),this._hash=this._hasher.digest("hex").toLowerCase().trim(),this.emit("data",this._hash),this.emit("end")},tape("random byte pipes",function(e){var t=new RandomReadStream({total:1024,block:256,jitter:16}),n=new HashStream,r=zlib.createGzip(),i=zlib.createGunzip();t.pipe(r).pipe(i).pipe(n),t.on("data",function(t){e.ok(t.length)}),r.on("data",function(t){e.ok(t.length)}),i.on("data",function(t){e.ok(t.length)}),n.on("data",function(t){e.ok(t.length)}),n.on("data",function(n){e.ok(n.length),e.equal(n,t._hash,"hashes should match")}),n.on("end",function(){e.end()})});