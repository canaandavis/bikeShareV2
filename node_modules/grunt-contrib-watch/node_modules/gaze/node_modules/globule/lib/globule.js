/*
 * globule
 * https://github.com/cowboy/node-globule
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 */

function processPatterns(e,t){return _.flatten(e).reduce(function(e,n){return n.indexOf("!")===0?(n=n.slice(1),_.difference(e,t(n))):_.union(e,t(n))},[])}function rename(e,t){return t.flatten&&(e=path.basename(e)),t.ext&&(e=e.replace(extDotRe[t.extDot],t.ext)),t.destBase&&(e=path.join(t.destBase,e)),e}var fs=require("fs"),path=require("path"),_=require("lodash"),glob=require("glob"),minimatch=require("minimatch"),globule=exports;globule.match=function(e,t,n){return e==null||t==null?[]:(_.isArray(e)||(e=[e]),_.isArray(t)||(t=[t]),e.length===0||t.length===0?[]:processPatterns(e,function(e){return minimatch.match(t,e,n||{})}))},globule.isMatch=function(){return globule.match.apply(null,arguments).length>0},globule.find=function(){var e=_.toArray(arguments),t=_.isPlainObject(e[e.length-1])?e.pop():{},n=_.isArray(e[0])?e[0]:e;if(n.length===0)return[];var r=t.srcBase||t.cwd,i=_.extend({},t);r&&(i.cwd=r);var s=processPatterns(n,function(e){return glob.sync(e,i)});return r&&t.prefixBase&&(s=s.map(function(e){return path.join(r,e)})),t.filter&&(s=s.filter(function(e){r&&!t.prefixBase&&(e=path.join(r,e));try{return _.isFunction(t.filter)?t.filter(e,t):fs.statSync(e)[t.filter]()}catch(n){return!1}})),s};var pathSeparatorRe=/[\/\\]/g,extDotRe={first:/(\.[^\/]*)?$/,last:/(\.[^\/\.]*)?$/};globule.mapping=function(e,t){if(e==null)return[];t=_.defaults({},t,{extDot:"first",rename:rename});var n=[],r={};return e.forEach(function(e){var i=t.rename(e,t);t.srcBase&&(e=path.join(t.srcBase,e)),i=i.replace(pathSeparatorRe,"/"),e=e.replace(pathSeparatorRe,"/"),r[i]?r[i].src.push(e):(n.push({src:[e],dest:i}),r[i]=n[n.length-1])}),n},globule.findMapping=function(e,t){return globule.mapping(globule.find(e,t),t)};